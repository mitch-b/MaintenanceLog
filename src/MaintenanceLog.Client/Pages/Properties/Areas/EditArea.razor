@page "/properties/{PropertyId:int}/areas/{AreaId:int}"

@using MaintenanceLog.Data.Entities
@using MaintenanceLog.Data.Services

@inject IPropertyService PropertyService
@inject IAreaService AreaService
@inject NavigationManager NavigationManager

<PageTitle>@propertyName | Edit @areaName</PageTitle>

<MenuBreadcrumbs Breadcrumbs=@Breadcrumbs />
<br />

<h3>@propertyName | Edit @areaName</h3>

@if (area is not null)
{
    <EditForm Model="@area" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" class="form-control" @bind-Value="@area.Name" />
        </div>

        <!-- button to save -->
        <button type="submit" class="btn btn-primary">Save</button>

    </EditForm>
}
else
{
    <p><em>Loading...</em></p>
}


@code {
    [Parameter]
    public int PropertyId { get; set; }
    [Parameter]
    public int AreaId { get; set; }

    private Property? property;
    private Area? area;

    private List<(string, string?)> Breadcrumbs => [
        ("Properties", "/properties"),
        (propertyName, $"/properties/{PropertyId}"),
        (areaName, null)
    ];

    private string propertyName => property?.Name ?? "Property";
    private string areaName => area?.Name ?? "Area";

    protected override async Task OnInitializedAsync()
    {
        property = await PropertyService.FindAsync(PropertyId);
        area = await AreaService.FindAsync(AreaId);

        if (property is null)
        {
            NavigationManager.NavigateTo($"/properties");
        }
        if (area is null)
        {
            NavigationManager.NavigateTo($"/properties/{PropertyId}");
        }
        await base.OnInitializedAsync();
    }

    private async Task HandleValidSubmit()
    {
        if (area is null)
        {
            return;
        }
        var updatedArea = await AreaService.UpdateAsync(area);
        if (updatedArea != null)
        {
            NavigationManager.NavigateTo($"/properties/{PropertyId}");
        }
    }

}
