@page "/task-definitions/add"

@using MaintenanceLog.Data.Entities
@using MaintenanceLog.Data.Services.Contracts

@inject ITaskDefinitionService TaskDefinitionService
@inject ITaskTypeService TaskTypeService
@inject IAssetService AssetService
@inject IAreaService AreaService
@inject NavigationManager NavigationManager

<h3>Add Task Definition</h3>

@if (taskDefinition is not null && areas is not null && assets is not null && taskTypes is not null)
{

    <EditForm Model="@taskDefinition" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <!-- Task Type Selection -->
    <div class="form-group">
        <label for="taskType">Task Type</label>
        <InputSelect id="taskType" class="form-control" @bind-Value="@taskDefinition.TaskTypeId">
            <option value=@(null as int?)>-- Select Task Type (required) --</option>
            @foreach (var taskType in taskTypes)
                {
                    <option value="@taskType.Id">@taskType.Name</option>
                }
            </InputSelect>
        </div>

        <!-- Task Definition Name -->
        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" class="form-control" @bind-Value="@taskDefinition.Name" />
        </div>

        <!-- Asset Selection -->
        <div class="form-group">
            <label for="assetId">Asset</label>
            <InputSelect id="assetId" class="form-control" @bind-Value="@taskDefinition.AssetId">
                <option value="">-- Select Asset (optional) --</option>
                @foreach (var asset in assets)
                {
                    <option value="@asset.Id">@asset.Name</option>
                }
            </InputSelect>
        </div>

        <!-- Area Selection -->
        <div class="form-group">
            <label for="areaId">Area</label>
            <InputSelect id="areaId" class="form-control" @bind-Value="@taskDefinition.AreaId">
                <option value="">-- Select Area (optional) --</option>
                @foreach (var area in areas)
                {
                    <option value="@area.Id">@area.Name</option>
                }
            </InputSelect>
        </div>

        <!-- Submit Button -->
        <button type="submit" class="btn btn-primary">Save</button>
    </EditForm>
}
else
{
    <p><em>Loading...</em></p>
}


@code {
    private TaskDefinition? taskDefinition;
    private List<Asset>? assets;
    private List<Area>? areas;
    private List<TaskType>? taskTypes;

    protected override async Task OnInitializedAsync()
    {
        assets = await AssetService.GetAsync();
        areas = await AreaService.GetAsync();
        taskTypes = await TaskTypeService.GetAsync();
        taskDefinition = new TaskDefinition()
            {
                Name = "",
                TaskTypeId = (int)taskTypes[0].Id,
            };
    }

    private async Task HandleValidSubmit()
    {
        if (taskDefinition is null)
        {
            return;
        }
        await TaskDefinitionService.AddAsync(taskDefinition);
        NavigationManager.NavigateTo("/task-definitions");
    }
}